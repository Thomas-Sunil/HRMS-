@model hrms.Models.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";

    // Dynamically choose the layout based on the user's role
    var userRole = User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Role)?.Value;
    string layout = userRole switch
    {
        "hr" => "_HrLayout.cshtml",
        "manager" => "_ManagerLayout.cshtml",
        _ => "_EmployeeLayout.cshtml"
    };
    Layout = $"~/Views/Shared/{layout}";
}

<div class="container-fluid">
    <div class="table-container p-4" style="max-width: 600px; margin: auto;">
        <h2 class="mb-4">Change Password</h2>

        <form asp-action="ChangePassword" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-floating mb-3">
                <input asp-for="OldPassword" class="form-control" placeholder="Current Password" />
                <label asp-for="OldPassword"></label>
                <span asp-validation-for="OldPassword" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="NewPassword" class="form-control" placeholder="New Password" />
                <label asp-for="NewPassword"></label>
                <span asp-validation-for="NewPassword" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm New Password" />
                <label asp-for="ConfirmPassword"></label>
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <button type="submit" class="w-100 btn btn-lg btn-primary">Update Password</button>
        </form>
    </div>
</div>