@model hrms.Models.ProjectDetailViewModel

@{
    ViewData["Title"] = "Project Details";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
}

<div class="container-fluid">
    <!-- Header with Project Name and Status -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">@Model.Project.Name <span class="badge bg-primary ms-2 fs-6">@Model.Project.Status</span></h2>
        <div>
            @if (!Model.Project.Status.Equals("Completed"))
            {
                <form asp-action="CompleteProject" method="post" class="d-inline">
                    <input type="hidden" name="projectId" value="@Model.Project.Id" />
                    <!-- In Views/Manager/ProjectDetails.cshtml, REPLACE the "Mark as Completed" form with this -->
                    @if (!Model.Project.Status.Equals("Completed"))
                    {
                        <a asp-action="CompleteProject" asp-route-projectId="@Model.Project.Id" class="btn btn-success">
                            <i class="fas fa-check-circle me-1"></i> Provide Feedback & Complete Project
                        </a>
                    }
                </form>
            }
            <a asp-action="Projects" class="btn btn-secondary">Back to Projects</a>
        </div>
    </div>
    <p class="text-muted">@Model.Project.Description</p>

    <hr />

    <div class="row mt-4">
        <!-- Main Column for Tasks -->
        <div class="col-lg-8">
            <h4><i class="fas fa-tasks me-2"></i>Tasks</h4>
            <div class="card">
                <div class="card-body">
                    <form asp-action="AddTaskToProject" method="post">
                        <input type="hidden" name="projectId" value="@Model.Project.Id" />
                        <div class="input-group">
                            <input name="description" class="form-control" placeholder="New task description..." required />
                            <select name="assignedEmployeeId" class="form-select" style="max-width: 200px;" required>
                                <option value="">-- Assign To --</option>
                                @foreach (var member in Model.AssignedTeamMembers)
                                {
                                    <option value="@member.Id">@member.FullName</option>
                                }
                            </select>
                            <button type="submit" class="btn btn-primary">Add Task</button>
                        </div>
                    </form>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var task in Model.Project.ProjectTasks.OrderBy(t => t.IsCompleted))
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center @(task.IsCompleted ? "list-group-item-light text-muted" : "")">
                            <div>
                                @if (task.IsCompleted)
                                {
                                    <del>@task.Description</del>
                                }
                                else
                                {

                                    @task.Description
                                }
                                <br /><small>Assigned to: <strong>@task.AssignedEmployee?.FullName</strong></small>
                            </div>
                            <span class="badge @(task.IsCompleted ? "bg-success" : "bg-warning text-dark")">@(task.IsCompleted ? "Completed" : "Pending")</span>
                        </li>
                    }
                    @if (!Model.Project.ProjectTasks.Any())
                    {
                        <li class="list-group-item text-center">No tasks have been created for this project.</li>
                    }
                </ul>
            </div>
        </div>

        <!-- Sidebar Column for Team -->
        <div class="col-lg-4">
            <h4><i class="fas fa-users me-2"></i>Team</h4>

            <!-- Assigned Members Card -->
            <div class="card mb-3">
                <div class="card-header">Assigned Members (@Model.AssignedTeamMembers.Count())</div>
                <ul class="list-group list-group-flush">
                    @foreach (var member in Model.AssignedTeamMembers)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            @member.FullName
                            <form asp-action="UnassignFromProject" method="post">
                                <input type="hidden" name="projectId" value="@Model.Project.Id" />
                                <input type="hidden" name="employeeId" value="@member.Id" />
                                <button type="submit" class="btn btn-sm btn-outline-danger"><i class="fas fa-times"></i></button>
                            </form>
                        </li>
                    }
                </ul>
            </div>

            <!-- Available Members Card -->
            <div class="card">
                <div class="card-header">Available to Assign (@Model.AvailableTeamMembers.Count())</div>
                <ul class="list-group list-group-flush">
                    @foreach (var member in Model.AvailableTeamMembers)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            @member.FullName
                            <form asp-action="AssignToProject" method="post">
                                <input type="hidden" name="projectId" value="@Model.Project.Id" />
                                <input type="hidden" name="employeeId" value="@member.Id" />
                                <button type="submit" class="btn btn-sm btn-outline-success"><i class="fas fa-plus"></i></button>
                            </form>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>